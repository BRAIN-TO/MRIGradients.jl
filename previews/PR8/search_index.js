var documenterSearchIndex = {"docs":
[{"location":"Utilities/","page":"Utilities","title":"Utilities","text":"Modules = [MRIGradients]\nPages   = [\"Util.jl\"]","category":"page"},{"location":"Utilities/#MRIGradients.gradients_to_nodes-Tuple{Matrix}","page":"Utilities","title":"MRIGradients.gradients_to_nodes","text":"gradients_to_nodes(gradients::Matrix; gamma=42577478, dwellTime=2e-6, FOV=[220,220,1],reconSize=[200,200,1])\n\nFunction to calculate the k-space nodes from an applied gradient train\n\nArguments\n\ngradients::Matrix - input gradients played out, acquired with constant dwell time. \ngamma - gyromagnetic ratio\ndwellTime - the dwell time of the trajectory\nFOV - spatial field of view in [mm]\nreconSize - reconstruction matrix size\n\n\n\n\n\n","category":"method"},{"location":"Utilities/#MRIGradients.nodes_to_gradients-Tuple{Matrix}","page":"Utilities","title":"MRIGradients.nodes_to_gradients","text":"nodes_to_gradients(nodes::Matrix; gamma=42577478, dwellTime=2e-6, FOV=[220,220,1],reconSize=[200,200,1])\n\nFunction to calculate the gradient train used to acquire k-space data\n\nArguments\n\nnodes::Matrix - input k-space nodes traversed in order, acquired with constant dwell time. \ngamma - gyromagnetic ratio\ndwellTime - the dwell time of the trajectory\nFOV - spatial field of view in [mm]\nreconSize - reconstruction matrix size\n\n\n\n\n\n","category":"method"},{"location":"Utilities/#MRIGradients.time2freq-Tuple{Any}","page":"Utilities","title":"MRIGradients.time2freq","text":"time2freq(t)\n\nconverts time domain vector into a vector of frequencies according to the Nyquist criterion Port of Johanna Vannesjo's time2freq method: https://github.com/MRI-gradient/GIRF/blob/main/utils/time2freq.m\n\nArguments\n\nt - input time vector\n\nOutputs\n\nf - Calculated requency axis, vector with [length(t)]\ndf - Frequency resolution\nf_max - Full frequency range. The frequency axis range is [-fmax/2, fmax/2].\n\n\n\n\n\n","category":"method"},{"location":"GIRFApplier/","page":"GIRFApplier","title":"GIRFApplier","text":"Modules = [MRIGradients]\nPages   = [\"GIRFApplier.jl\"]","category":"page"},{"location":"GIRFApplier/#MRIGradients.apply_girf-Tuple{GirfApplier, Any, Any, Any, Any}","page":"GIRFApplier","title":"MRIGradients.apply_girf","text":"apply_girf(g::GirfApplier, gradient_in, time_in, time_out, direction)\n\nFunction for predicting the gradient by applying the GIRF\nThis is done in one dimension only. Repeat this function for multiple dimensions\n\nArguments\n\ng::GirfApplier - GirfApplier containing GIRF data\ngradient_in - input gradient waveform corresponding to time_in vector\ntime_in - time vector corresponding to input gradient waveform\ntime_out - output time vector desired (decimation)\ndirection - direction of the GIRF to use (x,y,z etc...)\n\nOutputs:\n\ngrad_OUT_resampled - Vector, gradient waveform with GIRF applied, in the time points of time_out.\n\n\n\n\n\n","category":"method"},{"location":"#Welcome-to-the-MRIGradients.jl-Documentation!","page":"Home","title":"Welcome to the MRIGradients.jl Documentation!","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Follow the side pages for information about the provided functionality of the package :) ","category":"page"},{"location":"GIRFEssential/","page":"GIRFEssential","title":"GIRFEssential","text":"Modules = [MRIGradients]\nPages   = [\"GIRFEssential.jl\"]","category":"page"},{"location":"GIRFEssential/#MRIGradients.GirfEssential-Tuple{AbstractVecOrMat, AbstractVector, Bool, Any, Any}","page":"GIRFEssential","title":"MRIGradients.GirfEssential","text":"GirfEssential(data::AbstractVecOrMat, vect::AbstractVector, isFreq::Bool, inChannels, outBasis)\n\nFunction to create a girf structure with the same interface as the constructor in the MATLAB implementation.\n\nArguments\n\ndata::AbstractVecOrMat - [nSamples x nOutBasis x nInChannels] Full GIRF data.\nvect::AbstractVector - [nSamples] Frequency vector indicating the frequency range, in unit of Hz.\nisFreq::Bool - True for GIRF in frequency domain, false for GIRF in temporal domain.\ninChannels - Input gradient and shim channel names.\noutBasis - Output field basis.\n\nOutputs\n\ng::GirfEssential - Constructed GirfEssential object.\n\n\n\n\n\n","category":"method"},{"location":"GIRFEssential/#MRIGradients.convertDomain!-Tuple{GirfEssential}","page":"GIRFEssential","title":"MRIGradients.convertDomain!","text":"convertDomain!(g::GirfEssential)\n\nConvert frequency-domain GIRF to time domain and vice versa. Also calculates dependent parameters.\n\nArguments\n\ng::GirfEssential - The input GirfEssential object; conversion type is determined by g.isFreqDomainGirf\n\nOutputs\n\ng::GirfEssential - Modified GirfEssential object with converted/calculated fields.\n\nThis function was created from part of a code package for GIRF computation and application in MATLAB. The package is available under a BSD 3-clause license. Further info see: https://github.com/MRI-gradient/girf Original MATLAB Author:   Johanna Vannesjo (johanna.vannesjo@gmail.com) Copyright (C) 2014 IBT, University of Zurich and ETH Zurich,               2016 FMRIB centre, University of Oxford\n\n\n\n\n\n","category":"method"},{"location":"GIRFEssential/#MRIGradients.displayGirf-Tuple{GirfEssential}","page":"GIRFEssential","title":"MRIGradients.displayGirf","text":"displayGirf(g::GirfEssential)\n\nFunction to print out the girf data in a human-readable format as a summary to make sure data is loaded properly\n\nArguments\n\ng::GirfEssential - GirfEssential structure containing GIRF data\n\n\n\n\n\n","category":"method"},{"location":"GIRFEssential/#MRIGradients.loadGIRFMatlabTim","page":"GIRFEssential","title":"MRIGradients.loadGIRFMatlabTim","text":"GIRFfreq, GIRFdata, GIRF_length = loadGIRFTimMatlab() loads different measured GIRFs from Siemens Prisma, as computed in Matlab (Zhe \"Tim\" Wu's code)\n\nArguments\n\nidGirf              - identifier for selected GIRF                        0 = example GIRF in this repo                        1 = Nov 2020 pos blips                        2 = June 2021 pos blips                        3 = June 2021 pos/neg blips (4 averages)                         4 = November 2021, pos/neg blips (4 averages)\n\nOutputs\n\nGIRF_freq           - \nGIRF_data           - x 3 data\nGIRF_length           -                        \n\n\n\n\n\n","category":"function"},{"location":"GIRFEssential/#MRIGradients.loadGirf","page":"GIRFEssential","title":"MRIGradients.loadGirf","text":"loadGirf(degree, id)\n\nFunction to load girf with specified id according to hardcoded file structure (internal use only)\n\nArguments\n\ndegree - specifies degree of the girf (1st or 0th order correction)\nid - specifies girf measurement id since there have been multiple measurements\n\n\n\n\n\n","category":"function"},{"location":"GIRFEssential/#MRIGradients.readGIRFFile-Tuple{String, String, String, String, Bool}","page":"GIRFEssential","title":"MRIGradients.readGIRFFile","text":"readGIRFFile(g::GirfEssential, pathX::String, pathY::String, pathZ::String, varName::String, doFilter::Bool)\n\nFunction to read GIRF files with specific variable name and return a corresponding GIRFEssential object.\n\nArguments\n\npathX::String - Full path for GIRF MAT-file on X axis\npathY::String - Full path for GIRF MAT-file on Y axis\npathZ::String - Full path for GIRF MAT-file on Z axis\nvarName::String - Variable name that needs to be read as GIRF data from the MAT-files.\ndoFilter::Bool - Whether we filter the GIRF data using Tukey filter\n\nOutputs\n\ng::GirfEssential - Constructed GirfEssential object with read-in data.\n\n\n\n\n\n","category":"method"},{"location":"GIRFEssential/#MRIGradients.setIdentifier!-Tuple{GirfEssential, String}","page":"GIRFEssential","title":"MRIGradients.setIdentifier!","text":"setIdentifier!(g::GirfEssential, identifier::String)\n\nFunction to name the GIRF with an identifier\n\nArguments\n\ng::GirfEssential - GirfEssential object needs the identifier to be set.\nidentifier::String - Input identifier.\n\nOutputs\n\ng::GirfEssential - GirfEssential object with the identifier set as the input.\n\n\n\n\n\n","category":"method"}]
}
